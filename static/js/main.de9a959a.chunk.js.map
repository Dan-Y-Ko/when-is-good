{"version":3,"sources":["components/topBar/timeButton.js","components/topBar/topBar.js","components/Calendar/WeekSelect/LeftArrowButton.js","components/Calendar/WeekSelect/RightArrowButton.js","components/Calendar/WeekSelect/WeekDays/NumberDate.js","components/Calendar/WeekSelect/WeekDays/WordDate.js","components/Calendar/WeekSelect/WeekDays/WeekDays.js","components/Calendar/WeekSelect/WeekSelect.js","components/Calendar/TimeSelect/TimeSelect.js","components/Calendar/Calendar.js","components/App.js","serviceWorker.js","index.js"],"names":["TimeButton","react_default","a","createElement","className","this","props","isActive","onClick","clicked","mins","Component","TopBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changedMins","setState","active","state","_this2","timeButton","LeftArrowButton","RightArrowButton","NumberDate","num","WordDate","date","Weekdays","NumberDate_NumberDate","WordDate_WordDate","WeekSelect","month","startDate","endDate","LeftArrowButton_LeftArrowButton","weekPrevious","RightArrowButton_RightArrowButton","weekNext","WeekDays_Weekdays","TimeSelect","Calendar","WeekSelect_WeekSelect","TimeSelect_TimeSelect","App","topBar_TopBar","Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de9a959a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass TimeButton extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  // toggleClass = () => {\n  //   this.setState({ active: !this.state.active});\n  // };\n  \n  render() {\n    return (\n      <div>\n      <button className={ this.props.isActive ? 'btn-active': 'btn'} onClick={this.props.clicked}>{this.props.mins} min</button>\n      </div>\n    )\n  }\n}\nexport default TimeButton;\n","import React, { Component } from 'react'\nimport TimeButton from './timeButton';\nexport default class TopBar extends Component {\n\n  constructor() {\n    super() \n    this.state = {\n      active: 30\n      // 30 minutes is the default time \n    }\n  }\n\n  changedMins = (mins) => {\n    this.setState({\n      active: mins\n    });\n    // function that passes mins to a function from props to change the minutes for the calendar view\n  }\n  \n  render() {\n    return (\n      <div className=\"topbar\">\n        <div className=\"container\">\n        <div className=\"topBar\">\n        <TimeButton mins={'15'} clicked={() => this.changedMins(15)} isActive={this.state.active === 15}></TimeButton>\n        <TimeButton mins={'30'} clicked={() => this.changedMins(30)} isActive={this.state.active === 30}></TimeButton>\n        <p className=\"topBar_title\">select time</p>\n        <TimeButton mins={'45'} clicked={() => this.changedMins(45)} isActive={this.state.active === 45}></TimeButton>\n        <TimeButton mins={'60'} clicked={() => this.changedMins(60)} isActive={this.state.active === 60}></TimeButton>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from 'react'\n\nexport default class LeftArrowButton extends Component {\n  render() {\n    return (\n      <div>\n        <button className=\"week_arrow\">&larr;</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class RightArrowButton extends Component {\n  render() {\n    return (\n      <div>\n        <button className=\"week_arrow\">&rarr;</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\n\nexport default class NumberDate extends Component {\n  render() {\n    return (\n        <div>\n        <p className=\"numberDate\">{this.props.num}<sup>th</sup></p> \n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class WordDate extends Component {\n    render() {\n        return (\n            <p className=\"wordDate\">{this.props.date}</p>\n          );\n    }\n  \n}","import React, { Component } from 'react'\nimport NumberDate from './NumberDate'\nimport WordDate from './WordDate'\n\n\nexport default class Weekdays extends Component {\n  render() {\n    return (\n      <div>\n      <div className=\"weekdays\">\n        <div className=\"weekdays_day\">\n          <NumberDate num={'4'} />\n          <WordDate className=\"weekLetter\" date={'Mon'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'5'} />\n          <WordDate className=\"weekLetter\" date={'Tue'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'6'} />\n          <WordDate className=\"weekLetter\" date={'Wed'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'7'} />\n          <WordDate className=\"weekLetter\" date={'Thu'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'8'} />\n          <WordDate className=\"weekLetter\" date={'Fri'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'9'} />\n          <WordDate className=\"weekLetter\" date={'Sat'}/>\n        </div>\n        <div className=\"weekdays_day\">\n          <NumberDate num={'10'} />\n          <WordDate className=\"weekLetter\" date={'Sun'}/>\n        </div>    \n      </div>\n      </div>\n      \n    )\n  }\n}\n","import React, { Component } from 'react'\nimport LeftArrowButton from './LeftArrowButton'\nimport RightArrowButton from './RightArrowButton'\nimport WeekDays from './WeekDays/WeekDays'\n\nexport default class WeekSelect extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      month: \n      ['January',\n      'February', \n      'March', \n      'April',\n      'May', \n      'June', \n      'July', \n      'August', \n      'September',\n      'November', \n      'December'],\n      startDate: 4,\n      endDate: 10\n    }\n  }\n\n  weekNext () {\n    if ((this.state.startDate + 7) < 31 ) {\n      // you can just use this.setState once and seperate by comma right?\n      this.setState({startDate: (this.state.startDate + 7),\n                     endDate: (this.state.endDate + 7 )\n        })\n    } else {\n      this.setState({/*month: [(indexOf(this.state.month) + 1)],*/\n                     startDate: (this.state.startDate + 7),\n                     endDate: (this.state.endDate + 7 )\n        })\n    }\n  }\n\n  weekPrevious () {\n    // might be using a different type of method for these anyway\n  }\n\n  // class for the arrow buttons is set on the components and is week_arrow\n\n  // I think this component needs some sort of onStateChange to make the clicking change the week state\n  render() {\n    // let {startDate} = this.state;\n    // let {endDate} = this.state;\n    return (\n      <div>\n      <div className=\"week\">\n        <LeftArrowButton onClick={this.weekPrevious}/>\n        <p className=\"week_title\">{this.state.month[3]} {this.state.startDate}-{this.state.endDate}</p>\n        <RightArrowButton onClick={this.weekNext}/>\n      </div>\n      <WeekDays/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TimeSelect extends Component {\n  render() {\n    // check the calendar.scss file for the styles here\n    return (\n      <div className=\"TimeSelect\">\n        <div className=\"TimeSelect_containTitle\">\n        <h1 className=\"TimeSelect_title\">When is good?</h1>\n        </div>\n        <div className=\"TimeSelect_times\"></div>\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from 'react'\nimport WeekSelect from './WeekSelect/WeekSelect';\nimport TimeSelect from './TimeSelect/TimeSelect';\n\nexport default class Calendar extends Component {\n  render() {\n    // TimeSelect has the container for the 'when is good?' that is vertical on the page\n    return (\n      <div>\n        <WeekSelect />\n        <TimeSelect />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TopBar from './topBar/topBar'\nimport Calendar from './Calendar/Calendar';\nimport '../SASS/main.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Calendar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}